#!/bin/bash
# ========================================================================
# 完整验证流程 - 一键运行所有测试
# ========================================================================
# 执行步骤:
# 1. 统计显著性测试 (快速，5次运行)
# 2. 计算复杂度测试 (快速，单次运行)
# 3. 结果分析和可视化
# 4. (可选) 全面配置测试 (耗时较长)
# ========================================================================

# 仅使用 2号和3号 GPU
export CUDA_VISIBLE_DEVICES=2,3

PYTHON=/media/user/data3/toky/CondaEnvs/SparseGPT/bin/python

echo "========================================================================"
echo "SparseGPT 改进版本 - 完整验证流程"
echo "========================================================================"
echo ""
echo "本流程将执行以下测试:"
echo "  1. 统计显著性测试 (约 30-60 分钟)"
echo "  2. 计算复杂度测试 (约 10-20 分钟)"
echo "  3. 结果分析和可视化"
echo ""
echo "可选: 全面配置测试 (约 2-4 小时)"
echo ""

read -p "是否执行快速验证 (统计+复杂度)? [Y/n] " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Nn]$ ]]; then
    QUICK_MODE=true
else
    QUICK_MODE=false
fi

if [ "$QUICK_MODE" = true ]; then
    echo "运行快速验证模式..."
    echo ""
    
    # ========================================================================
    # 步骤 1: 统计显著性测试
    # ========================================================================
    echo "========================================================================"
    echo "步骤 1/3: 统计显著性测试"
    echo "========================================================================"
    echo "开始时间: $(date)"
    echo ""
    
    bash statistical_test.sh
    
    echo ""
    echo "完成时间: $(date)"
    echo ""
    
    # ========================================================================
    # 步骤 2: 计算复杂度测试
    # ========================================================================
    echo "========================================================================"
    echo "步骤 2/3: 计算复杂度测试"
    echo "========================================================================"
    echo "开始时间: $(date)"
    echo ""
    
    bash benchmark_complexity.sh
    
    echo ""
    echo "完成时间: $(date)"
    echo ""
    
    # ========================================================================
    # 步骤 3: 结果分析
    # ========================================================================
    echo "========================================================================"
    echo "步骤 3/3: 结果分析和可视化"
    echo "========================================================================"
    echo "开始时间: $(date)"
    echo ""
    
    $PYTHON analyze_results.py
    
    echo ""
    echo "完成时间: $(date)"
    echo ""
    
    # ========================================================================
    # 总结
    # ========================================================================
    echo "========================================================================"
    echo "快速验证完成！"
    echo "========================================================================"
    echo ""
    echo "结果文件:"
    echo "  - 统计测试: statistical_results/"
    echo "  - 复杂度测试: complexity_results/"
    echo "  - 分析报告: analysis_output/ANALYSIS_REPORT.md"
    echo ""
    echo "查看报告:"
    echo "  cat analysis_output/ANALYSIS_REPORT.md"
    echo ""
    
    # 显示关键结果
    if [ -f "analysis_output/ANALYSIS_REPORT.md" ]; then
        echo "========================================================================"
        echo "关键结果预览:"
        echo "========================================================================"
        echo ""
        grep -A 10 "## 5. 结论" analysis_output/ANALYSIS_REPORT.md || echo "报告生成中..."
        echo ""
    fi
else
    echo "跳过快速验证"
fi

echo ""
read -p "是否执行全面配置测试? (耗时 2-4 小时) [y/N] " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo "========================================================================"
    echo "执行全面配置测试..."
    echo "========================================================================"
    echo "开始时间: $(date)"
    echo ""
    
    bash comprehensive_test.sh
    
    echo ""
    echo "完成时间: $(date)"
    echo ""
    
    # 重新分析包含全面测试的结果
    echo "重新生成分析报告..."
    $PYTHON analyze_results.py
    
    echo ""
    echo "========================================================================"
    echo "全面测试完成！"
    echo "========================================================================"
else
    echo "跳过全面配置测试"
fi

echo ""
echo "========================================================================"
echo "所有测试完成！"
echo "========================================================================"
echo ""
echo "下一步:"
echo "  1. 查看分析报告: cat analysis_output/ANALYSIS_REPORT.md"
echo "  2. 查看可视化图表: ls analysis_output/*.png"
echo "  3. 查看原始数据:"
echo "     - statistical_results/statistical_runs.csv"
echo "     - complexity_results/complexity_benchmark.csv"
echo "     - comprehensive_results/results.csv (如果运行了全面测试)"
echo ""

